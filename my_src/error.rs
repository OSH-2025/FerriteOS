// 错误码定义
pub const LOS_OK: u32 = 0;
pub const LOS_ERRNO_QUEUE_CREATE_NO_MEMORY: u32 = 0x02000602;
pub const LOS_ERRNO_QUEUE_SIZE_TOO_BIG: u32 = 0x02000603;
pub const LOS_ERRNO_QUEUE_CB_UNAVAILABLE: u32 = 0x02000604;
pub const LOS_ERRNO_QUEUE_NOT_FOUND: u32 = 0x02000605;
pub const LOS_ERRNO_QUEUE_PEND_IN_LOCK: u32 = 0x02000606;
pub const LOS_ERRNO_QUEUE_TIMEOUT: u32 = 0x02000607;
pub const LOS_ERRNO_QUEUE_IN_TSKUSE: u32 = 0x02000608;
pub const LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT: u32 = 0x02000609;
pub const LOS_ERRNO_QUEUE_NOT_CREATE: u32 = 0x0200060a;
pub const LOS_ERRNO_QUEUE_IN_TSKWRITE: u32 = 0x0200060b;
pub const LOS_ERRNO_QUEUE_CREAT_PTR_NULL: u32 = 0x0200060c;
pub const LOS_ERRNO_QUEUE_PARA_ISZERO: u32 = 0x0200060d;
pub const LOS_ERRNO_QUEUE_INVALID: u32 = 0x0200060e;
pub const LOS_ERRNO_QUEUE_READ_PTR_NULL: u32 = 0x0200060f;
pub const LOS_ERRNO_QUEUE_READSIZE_IS_INVALID: u32 = 0x02000610;
pub const LOS_ERRNO_QUEUE_WRITE_PTR_NULL: u32 = 0x02000612;
pub const LOS_ERRNO_QUEUE_WRITESIZE_ISZERO: u32 = 0x02000613;
pub const LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG: u32 = 0x02000615;
pub const LOS_ERRNO_QUEUE_ISFULL: u32 = 0x02000616;
pub const LOS_ERRNO_QUEUE_PTR_NULL: u32 = 0x02000617;
pub const LOS_ERRNO_QUEUE_READ_IN_INTERRUPT: u32 = 0x02000618;
pub const LOS_ERRNO_QUEUE_ISEMPTY: u32 = 0x0200061d;
pub const LOS_ERRNO_QUEUE_READ_SIZE_TOO_SMALL: u32 = 0x0200061f;

// 队列状态
pub const LOS_UNUSED: u8 = 0;
pub const LOS_USED: u8 = 1;
